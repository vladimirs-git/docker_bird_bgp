router id 10.0.0.1;
define LOCAL_AS = 65001;  # Define a constant ofr bgp router as

protocol kernel {
  metric 0;
  learn;  # Learn all alien routes from the kernel
  persist;  # Don't remove routes on BIRD shutdown
  import none;
  export all;  # Default is export none
}

protocol device {
}

protocol direct {
}

filter F_LAN {
  # accept `r1_lan` prefix and reject any others `r1_r2`, `r1_r3`, `r1_r4`
  if (net = 10.1.11.0/24) then {
	accept;
  }
  reject;
}

filter F_65004_IN {
  # accept prefixes originated in the AS65004 only
  if (bgp_path.last = 65004) then {
	accept;
  }
  reject;
}

template bgp T_BGP {
  local as LOCAL_AS;  #  router id from a constant
  direct;  # neighbor is directly connected
  import filter F_65004_IN;
  export filter F_LAN;
}

protocol bgp router2 from T_BGP {
  neighbor 10.1.2.102 as 65002;
}

protocol bgp router3 from T_BGP {
  neighbor 10.1.3.103 as 65002;
}

protocol bgp router4 from T_BGP {
  neighbor 10.1.4.104 as 65004;
}